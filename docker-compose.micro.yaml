version: "3.8"
services:
  stats-api:
    build:
      context: ./
      dockerfile: ./dockerfile.api
    depends_on:
      - postgres
    ports:
      - "5555:5555"
    restart: unless-stopped
  stats-host:
    build:
      context: ./
      dockerfile: ./dockerfile.host
    depends_on:
      - postgres
    ports:
      - "5521:80"
    restart: unless-stopped
  stats-remote:
    build:
      context: ./
      dockerfile: ./dockerfile.remote
    depends_on:
      - postgres
    ports:
      - "5522:80"
    restart: unless-stopped
  # redis:
  #   image: redis:7.0.0-alpine
  #   read_only: true
  #   restart: unless-stopped
  #   ports:
  #     - "6666:6379"
  #   volumes:
  #     - /data
  postgres:
    image: postgres:15.2-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stats
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d stats"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 4G
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "5656:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin
  #   restart: unless-stopped
volumes:
  pgdata:
  # pgadmin-data:
